name: Production

on:
  push:
    branches:
      - '**'

jobs:
  lint-format:
    name: Linting and Formatting Checks
    uses: ./.github/workflows/lint-and-format.yml

  build:
    needs: lint-format
    name: Build
    runs-on: macos-latest
    environment: Production
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker
        run: |
          brew update
          brew install --cask docker
        if: runner.os == 'macOS'

      - name: Start Docker service
        run: open /Applications/Docker.app --args --unattended
        if: runner.os == 'macOS'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Build Docker container
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REDIS_URI: ${{ secrets.REDIS_URI }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          NEXT_PUBLIC_DRIVE_LINK: ${{ secrets.NEXT_PUBLIC_DRIVE_LINK }}
        run: |
          docker buildx build \
            --secret id=DATABASE_URL \
            --secret id=REDIS_URI \
            --secret id=NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY \
            --secret id=NEXT_PUBLIC_DRIVE_LINK \
            --platform=linux/arm64 --file=Dockerfile -t csclub-website .
          docker image save csclub-website | gzip > csclub-website.tar.gz

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: csclub-website-image
          path: csclub-website.tar.gz
